
- name: Check if lock_file_5 exists
  stat: 
    path: "/tmp/{{ matrix_domain }}_lock_5"
  register: lock_file_5

#9) Note the new subscription_id and member_id. Load matrix_vars.yml from the restored backup into the new AWX subsciption folder:

#~/Documents$ scp ./matrix/awx/matrix_vars.yml panel.topgunmatrix.com:/var/lib/awx/projects/clients/31/T-FKFAMCCR7CHX/
#matrix_vars.yml                               100% 3840    13.1KB/s   00:00 

- name: Copy 'matrix_vars.yml' from extracted backup to new subscription folder on AWX
  delegate_to: "{{ awx_server }}"
  copy:
    src: "/tmp/{{ matrix_domain }}-matrix_vars.yml"
    dest: "/var/lib/awx/projects/clients/{{ member_id }}/{{ new_subscription_id }}/matrix_vars.yml"
    owner: root
    group: root
    mode: '0600'
  when: lock_file_5.stat.exists == false

#10) Clear known_hosts entry in AWX for that particular server:

#root@AWX-panel:~# docker exec -i -t awx_task bash
#bash-4.4# ssh-keygen -R matrix.fishbole.xyz
## Host matrix.fishbole.xyz found: line 25
#/root/.ssh/known_hosts updated.
#Original contents retained as /root/.ssh/known_hosts.old

- name: Clear known_hosts entry in AWX for that particular server
  delegate_to: "{{ awx_server }}"
  command: |
    docker exec -i -t awx_task bash -c 'ssh-keygen -R matrix.{{ matrix_domain }}'
  when: lock_file_5.stat.exists == false

#11) Note the IP address generated during provision. Add new known_hosts record for the homeserver address:

#root@AWX-panel:~# docker exec -i -t awx_task bash
#bash-4.4# echo -e '# Custom DNS records for matrix.fishbole.xyz\n165.22.255.141 fishbole.xyz\n165.22.255.141 matrix.fishbole.xyz\n165.22.255.141 element.fishbole.xyz\n165.22.255.141 jitsi.fishbole.xyz' >> /etc/hosts


- name: Note the IP address generated during provision. 
  delegate_to: "{{ awx_server }}"
  fetch:
    src: "/var/lib/awx/projects/clients/{{ member_id }}/{{ new_subscription_id }}/server_vars.yml"
    dest: "/tmp/{{ matrix_domain }}-new_server_vars.yml"
    flat: yes
  when: lock_file_5.stat.exists == false

- name: Include new_server_vars.yml variable file
  include_vars: "/tmp/{{ matrix_domain }}-new_server_vars.yml"
  when: lock_file_5.stat.exists == false

- name: Add new known_hosts record for the homeserver address.
  delegate_to: "{{ awx_server }}"
  command: |
    docker exec -i -t awx_task bash echo -e '# Custom DNS records for matrix.{{ matrix_domain }}\n{{ server_ipv4 }} {{ matrix_domain }}\n{{ server_ipv4 }} matrix.{{ matrix_domain }}\n{{ server_ipv4 }} element.{{ matrix_domain }}\n{{ server_ipv4 }} jitsi.{{ matrix_domain }}' >> /etc/hosts
  when: lock_file_5.stat.exists == false



#12) Remove the 'start' tag from the new '0 - Deploy/Update a Server'. As admin user, run that template with the following extra variable added:

#`matrix_ssl_retrieval_method: none`

#fetch it

- name: Collect the extra_vars.json of the new subscription. 
  delegate_to: "{{ awx_server }}"
  fetch:
    src: "/var/lib/awx/projects/clients/{{ member_id }}/{{ new_subscription_id }}/extra_vars.json"
    dest: "/tmp/{{ matrix_domain }}-new_extra_vars.json"
    flat: yes
  when: lock_file_5.stat.exists == false

#modify it

#{
#  "matrix_domain": "gomatrixhostingforever.xyz",
#  "target": "matrix.gomatrixhostingforever.xyz",
#  "matrix_awx_enabled": "true",
#  "plan_title": "Micro On-Premises Server",
#  "subscription_id": "T-W3XYUTLK1RWE",
#  "member_id": "billy.bob"
#}
- name: Update 'new_extra_vars.json' file to include SSL disabler
  lineinfile:
    path: '/tmp/{{ matrix_domain }}-new_extra_vars.json'
    create: no
    insertafter: '^{'
    line: '  "matrix_ssl_retrieval_method": "none",'
    mode: '0600'
  when: lock_file_5.stat.exists == false

#load it in with


- name: Re-create 'Deploy/Update a Server' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    description: "Creates a new matrix service with Spantaleev's playbooks"
    extra_vars: "{{ lookup('file', '/tmp/{{ matrix_domain }}-new_extra_vars.json') }}"
    job_type: run
    job_tags: "setup-all"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: lock_file_5.stat.exists == false

#launch that motherfucker

- name: Launch deploy job template on AWX
  awx.awx.tower_job_launch:
    job_template: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: lock_file_5.stat.exists == false
  register: deploy_job

- name: Wait for deploy job max 900s (15m)
  awx.awx.tower_job_wait:
    job_id: "{{ deploy_job.id }}"
    timeout: 900
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: lock_file_5.stat.exists == false

- name: Create lock_file_5
  file:
    path: /tmp/{{ matrix_domain }}_lock_5
    state: touch
  when: lock_file_5.stat.exists == false
