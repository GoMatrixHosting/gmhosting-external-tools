

- name: Check if lock_file_8 exists
  stat: 
    path: "/tmp/{{ matrix_domain }}_lock_8"
  register: lock_file_8


#16) Remove the 'imposter-check' tag again and run 'Provision a New Server' again to load up the surveys from matrix_vars.yml


- name: Remove imposter-check tag from 'Provision a New Server' job template
  awx.awx.tower_job_template:
    name: "0 - {{ new_subscription_id }} - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_server_extra-vars.json') }}"
    job_type: run
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_survey_digitalocean.json') }}"
    state: present
    verbosity: 1
    job_tags: setup-firewall, setup-mailgun, setup-export, setup-backup
    skip_tags: digitalocean-space
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: ( subscription_type == "digitalocean" ) and ( lock_file_8.stat.exists == false )

- name: Remove imposter-check tag from 'Provision a New Server' job template
  awx.awx.tower_job_template:
    name: "0 - {{ new_subscription_id }} - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_server_extra-vars.json') }}"
    job_type: run
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_survey_on-premises.json') }}"
    state: present
    verbosity: 1
    job_tags: setup-firewall, setup-mailgun, setup-export, setup-backup
    skip_tags: digitalocean-space
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: ( subscription_type == "on-premises" ) and ( lock_file_8.stat.exists == false )

- name: Launch provision job template on AWX
  awx.awx.tower_job_launch:
    job_template: "0 - {{ subscription_id }} - Provision a New Server"
    extra_vars: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_server_extra-vars.json') }}"
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: ( not matrix_domain_file.stat.exists ) and ( lock_file_8.stat.exists == false )
  register: provision_job_2

- name: Wait for job max 900s (15m)
  awx.awx.tower_job_wait:
    job_id: "{{ provision_job_2.id }}"
    timeout: 900
  when: ( not matrix_domain_file.stat.exists ) and ( lock_file_8.stat.exists == false )



#17) Copy the DNS information and send it to the customer so they can configure DNS again. For Example:

#        "Your server has been created! You now need to configure your DNS to have the",
#        "following records:",
#        "Type    Host                    Priority  Weight  Port   Target",
#        "A       -                       -         -       -      178.62.95.215",
#        "A       -                       -         -       -      2a03:b0c0:1:d0::6df:e001",
#        "A       matrix                  -         -       -      178.62.95.215",
#        "A       matrix                  -         -       -      2a03:b0c0:1:d0::6df:e001",
#        "CNAME   element                 -         -       -      matrix.fishbole.xyz",
#        "CNAME   jitsi                   -         -       -      matrix.fishbole.xyz",
#        "SRV     _matrix-identity._tcp   10        0       443    matrix.fishbole.xyz",
#        "-",
#        "Setting the IPv6 record is optional. If you need help doing this please contact us."

# copy output from provision job?

# point user to provision job?

# re-generate the advice?


- name: Create lock_file_8
  file:
    path: /tmp/{{ matrix_domain }}_lock_8
    state: touch
  when: lock_file_8.stat.exists == false
