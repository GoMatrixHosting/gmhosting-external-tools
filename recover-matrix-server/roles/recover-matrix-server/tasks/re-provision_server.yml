

- name: Check if lock_file_8 exists
  stat: 
    path: "/tmp/{{ matrix_domain }}_lock_8"
  register: lock_file_8


#16) Remove the 'imposter-check' tag again and run 'Provision a New Server' again to load up the surveys from matrix_vars.yml


#- name: Save new 'Provision Server' survey.json to the AWX tower, template
#  template:
#    src: './surveys/provision_survey_digitalocean.json.j2'
#    dest: '/tmp/{{ matrix_domain }}_provision_survey_digitalocean.json'
#  when: ( subscription_type == "digitalocean" ) and ( lock_file_8.stat.exists == false )

#- name: Save new 'Provision Server' survey.json to the AWX tower, template
#  template:
#    src: './surveys/provision_survey_on-premises.json.j2'
#    dest: '/tmp/{{ matrix_domain }}_provision_survey_on-premises.json'
#  when: ( subscription_type == "on_premises" ) and ( lock_file_8.stat.exists == false )

- name: Remove imposter-check tag from 'Provision a New Server' job template
  awx.awx.tower_job_template:
    name: "0 - {{ new_subscription_id }} - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_server_extra-vars.json') }}"
    job_type: run
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: false
    #survey_spec: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_survey_digitalocean.json') }}"
    state: present
    verbosity: 1
    job_tags: setup-firewall, setup-mailgun, setup-export, setup-backup
    skip_tags: digitalocean-space
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: ( new_subscription_type == "digitalocean" ) and ( lock_file_8.stat.exists == false )

- name: Remove imposter-check tag from 'Provision a New Server' job template
  awx.awx.tower_job_template:
    name: "0 - {{ new_subscription_id }} - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_server_extra-vars.json') }}"
    job_type: run
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: false
    #survey_spec: "{{ lookup('file', '/tmp/{{ matrix_domain }}_provision_survey_on-premises.json') }}"
    state: present
    verbosity: 1
    job_tags: setup-firewall, setup-mailgun, setup-export, setup-backup
    skip_tags: digitalocean-space
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: ( new_subscription_type == "on-premises" ) and ( lock_file_8.stat.exists == false )

- name: Launch re-provision job template again on AWX to fill surveys
  awx.awx.tower_job_launch:
    job_template: "0 - {{ new_subscription_id }} - Provision a New Server"
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: lock_file_8.stat.exists == false
  register: provision_job_2

- name: Wait for re-provision job max 900s (15m)
  awx.awx.tower_job_wait:
    job_id: "{{ provision_job_2.id }}"
    timeout: 900
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: lock_file_8.stat.exists == false


- name: Create lock_file_8
  file:
    path: /tmp/{{ matrix_domain }}_lock_8
    state: touch
  when: lock_file_8.stat.exists == false
